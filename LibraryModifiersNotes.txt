Mrcp Client Library Modifiers Notes and Hints

The API for the library is contained in CMrcpSystem.  All additions to the library should maintain this approach.
ClientInterfaceDefs.h contains all the structures used in calls to the library.

All commands received by CMrcpSystem are sent to the CMrcpSession object and like named method.  There a
command object for the command requested is instantiated and queued to the task processor.  A reference ID
is allocated and registered for this command and the parameter values passed by reference are updated with
the command id.

Each command queued is an object and each object has an execute() method.  This method is called when the 
command exits the task processor queue.  All command objects call the AMrcpResource::command method.
If the MRCP session is in the proper state for the command,the state::command method is called.  If the
session is in a state that does not support the command, the abstract state method is called and a bad 
state result is returned to the calling applications callback routine.

As an example:
	CMrcpSystem::DefineGrammar - call CMrcpSession::DefineGrammar
	CMrcpSession::DefineGrammar - instantiates and queues a CRecDefineGrammar object
	The taskprocessor calls CRecDefineGrammar::Execute 
	which calls AMrcpResource DefineGrammar
	Which calls either AMrcpResourceState::definegrammar if in the wrong state or CMrcpResourceIdleState::definegrammar
	CMrcpResourceIdleState::Definegrammar calls Primdefinegrammar which compiles the MRCP message
	definegrammar and queues it to be sent.

The CMrcpCmdIdMgr is responsible for assigning unique command ids for each call.  When the result is
received, CMrcpCmdIdMgr is called to get the registered callback for the command, the result is compiled
added to the callback processor queue which calls the client applications registered callback.

Inbound audio, TTS and streaming file play, is sent directly to the client applications registered audio
callback for that session.  Buffering of inbound and outbound audio is the responsibility of the client
application.

